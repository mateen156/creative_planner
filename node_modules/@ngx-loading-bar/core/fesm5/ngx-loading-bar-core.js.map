{"version":3,"file":"ngx-loading-bar-core.js","sources":["ng:/@ngx-loading-bar/core/loading-bar.state.ts","ng:/@ngx-loading-bar/core/loading-bar.config.ts","ng:/@ngx-loading-bar/core/loading-bar.service.ts","ng:/@ngx-loading-bar/core/loading-bar.component.ts","ng:/@ngx-loading-bar/core/core.module.ts","ng:/@ngx-loading-bar/core/ngx-loading-bar-core.ts"],"names":[],"mappings":"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","sourcesContent":["import { Subject, timer, of, Observable } from 'rxjs';\nimport { map, switchMap, take, tap, startWith, shareReplay } from 'rxjs/operators';\nimport { LoadingBarConfig } from './loading-bar.config';\n\ninterface ILoadingBarState {\n  action: 'start' | 'complete' | 'set' | 'stop' | 'increment';\n  value: number;\n  initialValue: number;\n}\n\nexport class LoadingBarState {\n  private state: ILoadingBarState = {\n    action: null,\n    value: 0,\n    initialValue: 0,\n  };\n  private requests = null;\n  private disabled = false;\n  private stream$ = new Subject<ILoadingBarState>();\n  private _value$ = null;\n\n  constructor(private config: LoadingBarConfig = {}) {\n    this.config = {\n      latencyThreshold: 0,\n      ...config,\n    };\n  }\n\n  get value$() {\n    if (this._value$) {\n      return this._value$;\n    }\n\n    return (this._value$ = this.stream$.asObservable().pipe(\n      startWith(this.state),\n      switchMap((s) => this.timer$(s)),\n      shareReplay(),\n      map((s) => s.value),\n    ));\n  }\n\n  start(initialValue = 2) {\n    if (this.disabled) {\n      return;\n    }\n\n    this.next({ action: 'start', initialValue });\n  }\n\n  stop() {\n    this.next({ action: 'stop' });\n  }\n\n  complete() {\n    this.next({ action: 'complete' });\n  }\n\n  disable() {\n    this.disabled = true;\n  }\n\n  set(value: number) {\n    this.next({ action: 'set', value });\n  }\n\n  increment(value = 0) {\n    this.next({ action: 'increment', value });\n  }\n\n  private next(state: Partial<ILoadingBarState>, emitEvent = true) {\n    switch (state.action) {\n      case 'start':\n        this.requests = (this.requests || 0) + 1;\n        break;\n      case 'complete':\n        this.requests = (this.requests || 1) - 1;\n        if (this.requests > 0) {\n          return;\n        }\n        break;\n      case 'stop':\n        this.requests = 0;\n        break;\n      case 'increment':\n        state.value = this._increment(state.value);\n        break;\n    }\n\n    this.state = { ...this.state, action: null, ...state };\n    if (emitEvent) {\n      this.stream$.next(this.state);\n    }\n  }\n\n  private timer$ = (s: ILoadingBarState) => {\n    let state$: Observable<Partial<ILoadingBarState>> = of(s);\n    switch (s.action) {\n      case 'start':\n      case 'increment':\n      case 'set': {\n        if (s.action === 'start' && this.config.latencyThreshold === 0 && s.value === 0) {\n          s.value = s.initialValue;\n        }\n\n        if (this.requests > 0) {\n          state$ = timer(this.config.latencyThreshold, 250).pipe(\n            map((t) => ({ ...s, value: t === 0 ? this.state.value || s.initialValue : this._increment() })),\n          );\n        }\n        break;\n      }\n      case 'complete':\n      case 'stop': {\n        // Attempt to aggregate any start/complete calls within 500ms:\n        state$ =\n          s.value === 0\n            ? of({ ...s })\n            : timer(0, 500).pipe(\n                take(2),\n                map((t) => ({ value: t === 0 ? 100 : 0 })),\n              );\n        break;\n      }\n    }\n\n    return state$.pipe(\n      map((next) => <ILoadingBarState>{ ...next, action: 'set' }),\n      tap((next) => this.next(next, false)),\n    );\n  };\n\n  private _increment(rnd = 0) {\n    const stat = this.state.value;\n    if (stat >= 99) {\n      rnd = 0;\n    }\n\n    if (rnd === 0) {\n      if (stat >= 0 && stat < 25) {\n        // Start out between 3 - 6% increments\n        rnd = Math.random() * (5 - 3 + 1) + 3;\n      } else if (stat >= 25 && stat < 65) {\n        // increment between 0 - 3%\n        rnd = Math.random() * 3;\n      } else if (stat >= 65 && stat < 90) {\n        // increment between 0 - 2%\n        rnd = Math.random() * 2;\n      } else if (stat >= 90 && stat < 99) {\n        // finally, increment it .5 %\n        rnd = 0.5;\n      } else {\n        // after 99%, don't increment:\n        rnd = 0;\n      }\n    }\n\n    return rnd + stat;\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface LoadingBarConfig {\n  latencyThreshold?: number;\n}\n\nexport const LOADING_BAR_CONFIG = new InjectionToken<LoadingBarConfig>('LOADING_BAR_CONFIG');\n","import { Injectable, NgZone, Optional } from '@angular/core';\nimport { PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { LoadingBarState } from './loading-bar.state';\nimport { Subject, combineLatest, Observable, OperatorFunction } from 'rxjs';\nimport { switchMap, map, startWith } from 'rxjs/operators';\nimport { LOADING_BAR_CONFIG, LoadingBarConfig } from './loading-bar.config';\n\n@Injectable({ providedIn: 'root' })\nexport class LoadingBarService {\n  private refs: { [id: string]: LoadingBarState } = {};\n  private streams$ = new Subject<void>();\n  readonly value$ = this.streams$.asObservable().pipe(\n    startWith(null),\n    switchMap(() => combineLatest(...Object.keys(this.refs).map((s) => this.refs[s].value$))),\n    runInZone(this.zone),\n    map((v) => Math.max(0, ...v)),\n  );\n\n  /** @deprecated use `value$` instead. */\n  get progress$() {\n    return this.value$;\n  }\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() @Inject(LOADING_BAR_CONFIG) private config: LoadingBarConfig = {},\n    @Optional() private zone?: NgZone,\n  ) {}\n\n  /** @deprecated use `useRef` instead. */\n  start(initialValue = 2) {\n    this.useRef().start(initialValue);\n  }\n\n  /** @deprecated use `useRef` instead. */\n  set(value: number) {\n    this.useRef().set(value);\n  }\n\n  /** @deprecated use `useRef` instead. */\n  increment(value?: number) {\n    this.useRef().increment(value);\n  }\n\n  /** @deprecated use `useRef` instead. */\n  complete() {\n    this.useRef().complete();\n  }\n\n  /** @deprecated use `useRef` instead. */\n  stop() {\n    this.useRef().stop();\n  }\n\n  useRef(id: string = 'default'): LoadingBarState {\n    if (!this.refs[id]) {\n      this.refs[id] = new LoadingBarState(this.config);\n      this.streams$.next();\n\n      if (!isPlatformBrowser(this.platformId)) {\n        this.refs[id].disable();\n      }\n    }\n\n    return this.refs[id];\n  }\n}\n\n// https://stackoverflow.com/a/57452361/1406096\nexport function runInZone<T>(zone: NgZone): OperatorFunction<T, T> {\n  if (!zone) {\n    return (source) => source;\n  }\n\n  return (source) =>\n    new Observable((observer) =>\n      source.subscribe(\n        (value: T) => zone.run(() => observer.next(value)),\n        (e: any) => zone.run(() => observer.error(e)),\n        () => zone.run(() => observer.complete()),\n      ),\n    );\n}\n","import { Component, Input, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { LoadingBarService } from './loading-bar.service';\n\n@Component({\n  selector: 'ngx-loading-bar',\n  template: `\n    <ng-container *ngIf=\"value != null ? value : (value$ | async) as progress\">\n      <div *ngIf=\"includeSpinner\" class=\"ngx-spinner\">\n        <div [style.width]=\"diameter\" [style.height]=\"diameter\" class=\"ngx-spinner-icon\"></div>\n      </div>\n      <div\n        *ngIf=\"includeBar\"\n        class=\"ngx-bar\"\n        [style.background]=\"color\"\n        [style.height]=\"height\"\n        [style.width]=\"progress + '%'\"\n      ></div>\n    </ng-container>\n  `,\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.Emulated,\n  styleUrls: ['./loading-bar.component.scss'],\n  host: {\n    '[attr.fixed]': 'fixed',\n    '[style.color]': 'color',\n  },\n})\nexport class LoadingBarComponent {\n  @Input() includeSpinner = true;\n  @Input() includeBar = true;\n  @Input() fixed = true;\n  @Input() color = '#29d';\n  @Input() value: number;\n  @Input() ref: string;\n  @Input() height: string;\n  @Input() diameter: string;\n\n  get value$() {\n    return this.ref ? this.loader.useRef(this.ref).value$ : this.loader.value$;\n  }\n\n  constructor(private loader: LoadingBarService) {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoadingBarComponent } from './loading-bar.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [LoadingBarComponent],\n  exports: [LoadingBarComponent],\n})\nexport class LoadingBarModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}