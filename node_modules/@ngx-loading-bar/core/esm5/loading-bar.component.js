import { __decorate, __metadata } from "tslib";
import { Component, Input, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';
import { LoadingBarService } from './loading-bar.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function LoadingBarComponent_ng_container_0_div_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵelement(1, "div", 4);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("width", ctx_r2.diameter)("height", ctx_r2.diameter);
} }
function LoadingBarComponent_ng_container_0_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 5);
} if (rf & 2) {
    var progress_r1 = ɵngcc0.ɵɵnextContext().ngIf;
    var ctx_r3 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵstyleProp("background", ctx_r3.color)("height", ctx_r3.height)("width", progress_r1 + "%");
} }
function LoadingBarComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵtemplate(1, LoadingBarComponent_ng_container_0_div_1_Template, 2, 4, "div", 1);
    ɵngcc0.ɵɵtemplate(2, LoadingBarComponent_ng_container_0_div_2_Template, 1, 6, "div", 2);
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.includeSpinner);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.includeBar);
} }
var LoadingBarComponent = /** @class */ (function () {
    function LoadingBarComponent(loader) {
        this.loader = loader;
        this.includeSpinner = true;
        this.includeBar = true;
        this.fixed = true;
        this.color = '#29d';
    }
    Object.defineProperty(LoadingBarComponent.prototype, "value$", {
        get: function () {
            return this.ref ? this.loader.useRef(this.ref).value$ : this.loader.value$;
        },
        enumerable: true,
        configurable: true
    });
    LoadingBarComponent.ctorParameters = function () { return [
        { type: LoadingBarService }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], LoadingBarComponent.prototype, "includeSpinner", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], LoadingBarComponent.prototype, "includeBar", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], LoadingBarComponent.prototype, "fixed", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], LoadingBarComponent.prototype, "color", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], LoadingBarComponent.prototype, "value", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LoadingBarComponent.prototype, "ref", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LoadingBarComponent.prototype, "height", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], LoadingBarComponent.prototype, "diameter", void 0);
    LoadingBarComponent = __decorate([ __metadata("design:paramtypes", [LoadingBarService])
    ], LoadingBarComponent);
LoadingBarComponent.ɵfac = function LoadingBarComponent_Factory(t) { return new (t || LoadingBarComponent)(ɵngcc0.ɵɵdirectiveInject(LoadingBarService)); };
LoadingBarComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: LoadingBarComponent, selectors: [["ngx-loading-bar"]], hostVars: 3, hostBindings: function LoadingBarComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("fixed", ctx.fixed);
        ɵngcc0.ɵɵstyleProp("color", ctx.color);
    } }, inputs: { includeSpinner: "includeSpinner", includeBar: "includeBar", fixed: "fixed", color: "color", value: "value", ref: "ref", height: "height", diameter: "diameter" }, decls: 2, vars: 3, consts: [[4, "ngIf"], ["class", "ngx-spinner", 4, "ngIf"], ["class", "ngx-bar", 3, "background", "height", "width", 4, "ngIf"], [1, "ngx-spinner"], [1, "ngx-spinner-icon"], [1, "ngx-bar"]], template: function LoadingBarComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, LoadingBarComponent_ng_container_0_Template, 3, 2, "ng-container", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ctx.value != null ? ctx.value : ɵngcc0.ɵɵpipeBind1(1, 1, ctx.value$));
    } }, directives: [ɵngcc1.NgIf], pipes: [ɵngcc1.AsyncPipe], styles: ["[_nghost-%COMP%]{position:relative;display:block;pointer-events:none}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{transition:350ms linear;display:block;position:absolute;top:5px;left:0}[_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]   .ngx-spinner-icon[_ngcontent-%COMP%]{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}[_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl]   [_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{right:0;left:unset}[fixed=true][_nghost-%COMP%]{z-index:10002}[fixed=true][_nghost-%COMP%]   .ngx-bar[_ngcontent-%COMP%]{position:fixed}[fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{position:fixed;top:10px;left:10px}[dir=rtl]   [fixed=true][_nghost-%COMP%]   .ngx-spinner[_ngcontent-%COMP%]{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}"], changeDetection: 0 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LoadingBarComponent, [{
        type: Component,
        args: [{
                selector: 'ngx-loading-bar',
                template: "\n    <ng-container *ngIf=\"value != null ? value : (value$ | async) as progress\">\n      <div *ngIf=\"includeSpinner\" class=\"ngx-spinner\">\n        <div [style.width]=\"diameter\" [style.height]=\"diameter\" class=\"ngx-spinner-icon\"></div>\n      </div>\n      <div\n        *ngIf=\"includeBar\"\n        class=\"ngx-bar\"\n        [style.background]=\"color\"\n        [style.height]=\"height\"\n        [style.width]=\"progress + '%'\"\n      ></div>\n    </ng-container>\n  ",
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush,
                encapsulation: ViewEncapsulation.Emulated,
                host: {
                    '[attr.fixed]': 'fixed',
                    '[style.color]': 'color'
                },
                styles: [":host{position:relative;display:block;pointer-events:none}:host .ngx-spinner{transition:350ms linear;display:block;position:absolute;top:5px;left:0}:host .ngx-spinner .ngx-spinner-icon{width:14px;height:14px;border:2px solid transparent;border-top-color:inherit;border-left-color:inherit;border-radius:50%;-webkit-animation:.4s linear infinite loading-bar-spinner;animation:.4s linear infinite loading-bar-spinner}:host .ngx-bar{transition:width 350ms;position:absolute;top:0;left:0;width:100%;height:2px;border-bottom-right-radius:1px;border-top-right-radius:1px}[dir=rtl] :host .ngx-bar{right:0;left:unset}:host[fixed=true]{z-index:10002}:host[fixed=true] .ngx-bar{position:fixed}:host[fixed=true] .ngx-spinner{position:fixed;top:10px;left:10px}[dir=rtl] :host[fixed=true] .ngx-spinner{right:10px;left:unset}@-webkit-keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes loading-bar-spinner{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}"]
            }]
    }], function () { return [{ type: LoadingBarService }]; }, { includeSpinner: [{
            type: Input
        }], includeBar: [{
            type: Input
        }], fixed: [{
            type: Input
        }], color: [{
            type: Input
        }], value: [{
            type: Input
        }], ref: [{
            type: Input
        }], height: [{
            type: Input
        }], diameter: [{
            type: Input
        }] }); })();
    return LoadingBarComponent;
}());
export { LoadingBarComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZGluZy1iYXIuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZzovQG5neC1sb2FkaW5nLWJhci9jb3JlL2xvYWRpbmctYmFyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsaUJBQWlCLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDN0YsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBMkIxRDtBQUNvQixJQWFsQiw2QkFBb0IsTUFBeUI7QUFBSSxRQUE3QixXQUFNLEdBQU4sTUFBTSxDQUFtQjtBQUFDLFFBYnJDLG1CQUFjLEdBQUcsSUFBSSxDQUFDO0FBQ2pDLFFBQVcsZUFBVSxHQUFHLElBQUksQ0FBQztBQUM3QixRQUFXLFVBQUssR0FBRyxJQUFJLENBQUM7QUFDeEIsUUFBVyxVQUFLLEdBQUcsTUFBTSxDQUFDO0FBQzFCLElBU2tELENBQUM7QUFDbkQsSUFMRSxzQkFBSSx1Q0FBTTtBQUFJLGFBQWQ7QUFBYyxZQUNaLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7QUFDL0UsUUFBRSxDQUFDO0FBRUg7QUFBMEI7QUFDekIsT0FIRTtBQUNIO0FBR1MsZ0JBRnFCLGlCQUFpQjtBQUFHO0FBRTVDLElBZks7QUFBYSxRQUFyQixLQUFLLEVBQUU7QUFBRTtBQUNRLCtEQURhO0FBQ2hDLElBQVU7QUFBYSxRQUFyQixLQUFLLEVBQUU7QUFBRTtBQUNZLDJEQURLO0FBQzVCLElBQVU7QUFBYSxRQUFyQixLQUFLLEVBQUU7QUFBRTtBQUVWLHNEQUZzQjtBQUN2QixJQUFVO0FBQWEsUUFBckIsS0FBSyxFQUFFO0FBQUU7QUFFWCxzREFGeUI7QUFDekIsSUFBVTtBQUFhLFFBQXJCLEtBQUssRUFBRTtBQUFFO0FBRVIsc0RBRnFCO0FBQ3hCLElBQVU7QUFDWCxRQURHLEtBQUssRUFBRTtBQUFFO0FBRVQsb0RBRm9CO0FBQ3RCLElBQVU7QUFBYSxRQUFyQixLQUFLLEVBQUU7QUFBRTtBQUNlLHVEQUREO0FBQ3pCLElBQVU7QUFBYSxRQUFyQixLQUFLLEVBQUU7QUFBRTtBQUdMLHlEQUhxQjtBQUU1QixJQVZhLG1CQUFtQix3QkF6Qi9CLFNBQVMsQ0FBQyxjQUNULFFBQVEsRUFBRSwzQ0F3Qkosa0NBY3NCLGlCQUFpQjtNQXRDbEIsY0FDM0IsUUFBUSw1QkFxQ3dDLE9BZHJDLG1CQUFtQixDQWUvQjtDQXRDVzs7OzswQkFhVCxjQUNELG1CQUFtQixFQUFFLEtBQUssY0FDMUIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU0sY0FDL0MsYUFBYSxFQUFFLGlCQUFpQixDQUFDLFFBQVEsY0FFekMsSUFBSSxFQUFFLGtCQUNKLGNBQWMsRUFBRSxPQUFPLGtCQUN2QixlQUFlLEVBQUUsT0FBTyxlQUN6Qjs7Ozs7eWxCQUNGLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBaUJGO0FBQUMsSUFERCwwQkFBQztBQUNBLENBREEsQUFmRCxJQWVDO0FBQ0QsU0FoQmEsbUJBQW1CO0FBQy9CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgVmlld0VuY2Fwc3VsYXRpb24sIENoYW5nZURldGVjdGlvblN0cmF0ZWd5IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMb2FkaW5nQmFyU2VydmljZSB9IGZyb20gJy4vbG9hZGluZy1iYXIuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ25neC1sb2FkaW5nLWJhcicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cInZhbHVlICE9IG51bGwgPyB2YWx1ZSA6ICh2YWx1ZSQgfCBhc3luYykgYXMgcHJvZ3Jlc3NcIj5cbiAgICAgIDxkaXYgKm5nSWY9XCJpbmNsdWRlU3Bpbm5lclwiIGNsYXNzPVwibmd4LXNwaW5uZXJcIj5cbiAgICAgICAgPGRpdiBbc3R5bGUud2lkdGhdPVwiZGlhbWV0ZXJcIiBbc3R5bGUuaGVpZ2h0XT1cImRpYW1ldGVyXCIgY2xhc3M9XCJuZ3gtc3Bpbm5lci1pY29uXCI+PC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXZcbiAgICAgICAgKm5nSWY9XCJpbmNsdWRlQmFyXCJcbiAgICAgICAgY2xhc3M9XCJuZ3gtYmFyXCJcbiAgICAgICAgW3N0eWxlLmJhY2tncm91bmRdPVwiY29sb3JcIlxuICAgICAgICBbc3R5bGUuaGVpZ2h0XT1cImhlaWdodFwiXG4gICAgICAgIFtzdHlsZS53aWR0aF09XCJwcm9ncmVzcyArICclJ1wiXG4gICAgICA+PC9kaXY+XG4gICAgPC9uZy1jb250YWluZXI+XG4gIGAsXG4gIHByZXNlcnZlV2hpdGVzcGFjZXM6IGZhbHNlLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uRW11bGF0ZWQsXG4gIHN0eWxlVXJsczogWycuL2xvYWRpbmctYmFyLmNvbXBvbmVudC5zY3NzJ10sXG4gIGhvc3Q6IHtcbiAgICAnW2F0dHIuZml4ZWRdJzogJ2ZpeGVkJyxcbiAgICAnW3N0eWxlLmNvbG9yXSc6ICdjb2xvcicsXG4gIH0sXG59KVxuZXhwb3J0IGNsYXNzIExvYWRpbmdCYXJDb21wb25lbnQge1xuICBASW5wdXQoKSBpbmNsdWRlU3Bpbm5lciA9IHRydWU7XG4gIEBJbnB1dCgpIGluY2x1ZGVCYXIgPSB0cnVlO1xuICBASW5wdXQoKSBmaXhlZCA9IHRydWU7XG4gIEBJbnB1dCgpIGNvbG9yID0gJyMyOWQnO1xuICBASW5wdXQoKSB2YWx1ZTogbnVtYmVyO1xuICBASW5wdXQoKSByZWY6IHN0cmluZztcbiAgQElucHV0KCkgaGVpZ2h0OiBzdHJpbmc7XG4gIEBJbnB1dCgpIGRpYW1ldGVyOiBzdHJpbmc7XG5cbiAgZ2V0IHZhbHVlJCgpIHtcbiAgICByZXR1cm4gdGhpcy5yZWYgPyB0aGlzLmxvYWRlci51c2VSZWYodGhpcy5yZWYpLnZhbHVlJCA6IHRoaXMubG9hZGVyLnZhbHVlJDtcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgbG9hZGVyOiBMb2FkaW5nQmFyU2VydmljZSkge31cbn1cbiJdfQ==