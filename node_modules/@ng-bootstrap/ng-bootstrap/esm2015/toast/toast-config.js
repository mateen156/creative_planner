import { Injectable } from '@angular/core';
import { NgbConfig } from '../ngb-config';
import * as i0 from "@angular/core";
import * as i1 from "../ngb-config";
/**
 * Configuration service for the NgbToast component. You can inject this service, typically in your root component,
 * and customize the values of its properties in order to provide default values for all the toasts used in the
 * application.
 *
 * @since 5.0.0
 */
import * as ɵngcc0 from '@angular/core';
export class NgbToastConfig {
    constructor(ngbConfig) {
        this.autohide = true;
        this.delay = 500;
        this.ariaLive = 'polite';
        this.animation = ngbConfig.animation;
    }
}
NgbToastConfig.ɵfac = function NgbToastConfig_Factory(t) { return new (t || NgbToastConfig)(ɵngcc0.ɵɵinject(NgbConfig)); };
NgbToastConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgbToastConfig_Factory() { return new NgbToastConfig(i0.ɵɵinject(i1.NgbConfig)); }, token: NgbToastConfig, providedIn: "root" });
NgbToastConfig.ctorParameters = () => [
    { type: NgbConfig }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbToastConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return [{ type: NgbConfig }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9hc3QtY29uZmlnLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvdG9hc3QvdG9hc3QtY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN4QztBQUVnQztBQTBCaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSCxNQUFNLE9BQU8sY0FBYztBQUFHLElBTTVCLFlBQVksU0FBb0I7QUFBSSxRQUpwQyxhQUFRLEdBQUcsSUFBSSxDQUFDO0FBQ2xCLFFBQUUsVUFBSyxHQUFHLEdBQUcsQ0FBQztBQUNkLFFBQUUsYUFBUSxHQUF1QixRQUFRLENBQUM7QUFDMUMsUUFDc0MsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDO0FBQUMsSUFBQSxDQUFDO0FBQzdFOzJIQUFDO0FBQ0Qsa01BUks7QUFBQztFQURMLFVBQVUsU0FBQyxFQUFDLHZCQUNpQyxZQXJDdEMsU0FBUztBQUFHO01Bb0NHLEVBQUUsTUFBTSxFQUFDOzs7bUVBcENWO0FBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0luamVjdGFibGV9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtOZ2JDb25maWd9IGZyb20gJy4uL25nYi1jb25maWcnO1xuXG4vKipcbiAqIEludGVyZmFjZSB1c2VkIHRvIHR5cGUgYWxsIHRvYXN0IGNvbmZpZyBvcHRpb25zLiBTZWUgYE5nYlRvYXN0Q29uZmlnYC5cbiAqXG4gKiBAc2luY2UgNS4wLjBcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBOZ2JUb2FzdE9wdGlvbnMge1xuICAvKipcbiAgICogU3BlY2lmeSBpZiB0aGUgdG9hc3QgY29tcG9uZW50IHNob3VsZCBlbWl0IHRoZSBgaGlkZSgpYCBvdXRwdXRcbiAgICogYWZ0ZXIgYSBjZXJ0YWluIGBkZWxheWAgaW4gbXMuXG4gICAqL1xuICBhdXRvaGlkZT86IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIERlbGF5IGluIG1zIGFmdGVyIHdoaWNoIHRoZSBgaGlkZSgpYCBvdXRwdXQgc2hvdWxkIGJlIGVtaXR0ZWQuXG4gICAqL1xuICBkZWxheT86IG51bWJlcjtcblxuICAvKipcbiAgICogVHlwZSBvZiBhcmlhLWxpdmUgYXR0cmlidXRlIHRvIGJlIHVzZWQuXG4gICAqXG4gICAqIENvdWxkIGJlIG9uZSBvZiB0aGVzZSAyIHZhbHVlcyAoYXMgc3RyaW5nKTpcbiAgICogLSBgcG9saXRlYCAoZGVmYXVsdClcbiAgICogLSBgYWxlcnRgXG4gICAqL1xuICBhcmlhTGl2ZT86ICdwb2xpdGUnIHwgJ2FsZXJ0Jztcbn1cblxuLyoqXG4gKiBDb25maWd1cmF0aW9uIHNlcnZpY2UgZm9yIHRoZSBOZ2JUb2FzdCBjb21wb25lbnQuIFlvdSBjYW4gaW5qZWN0IHRoaXMgc2VydmljZSwgdHlwaWNhbGx5IGluIHlvdXIgcm9vdCBjb21wb25lbnQsXG4gKiBhbmQgY3VzdG9taXplIHRoZSB2YWx1ZXMgb2YgaXRzIHByb3BlcnRpZXMgaW4gb3JkZXIgdG8gcHJvdmlkZSBkZWZhdWx0IHZhbHVlcyBmb3IgYWxsIHRoZSB0b2FzdHMgdXNlZCBpbiB0aGVcbiAqIGFwcGxpY2F0aW9uLlxuICpcbiAqIEBzaW5jZSA1LjAuMFxuICovXG5ASW5qZWN0YWJsZSh7cHJvdmlkZWRJbjogJ3Jvb3QnfSlcbmV4cG9ydCBjbGFzcyBOZ2JUb2FzdENvbmZpZyBpbXBsZW1lbnRzIE5nYlRvYXN0T3B0aW9ucyB7XG4gIGFuaW1hdGlvbjogYm9vbGVhbjtcbiAgYXV0b2hpZGUgPSB0cnVlO1xuICBkZWxheSA9IDUwMDtcbiAgYXJpYUxpdmU6ICdwb2xpdGUnIHwgJ2FsZXJ0JyA9ICdwb2xpdGUnO1xuXG4gIGNvbnN0cnVjdG9yKG5nYkNvbmZpZzogTmdiQ29uZmlnKSB7IHRoaXMuYW5pbWF0aW9uID0gbmdiQ29uZmlnLmFuaW1hdGlvbjsgfVxufVxuIl19