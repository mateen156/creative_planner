import { Injectable } from '@angular/core';
import { NgbConfig } from '../ngb-config';
import * as i0 from "@angular/core";
import * as i1 from "../ngb-config";
/**
 * A configuration service for the [`NgbNav`](#/components/nav/api#NgbNav) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the navs used in the application.
 *
 * @since 5.2.0
 */
import * as ɵngcc0 from '@angular/core';
export class NgbNavConfig {
    constructor(ngbConfig) {
        this.destroyOnHide = true;
        this.orientation = 'horizontal';
        this.roles = 'tablist';
        this.keyboard = false;
        this.animation = ngbConfig.animation;
    }
}
NgbNavConfig.ɵfac = function NgbNavConfig_Factory(t) { return new (t || NgbNavConfig)(ɵngcc0.ɵɵinject(NgbConfig)); };
NgbNavConfig.ɵprov = i0.ɵɵdefineInjectable({ factory: function NgbNavConfig_Factory() { return new NgbNavConfig(i0.ɵɵinject(i1.NgbConfig)); }, token: NgbNavConfig, providedIn: "root" });
NgbNavConfig.ctorParameters = () => [
    { type: NgbConfig }
];
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbNavConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return [{ type: NgbConfig }]; }, null); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LWNvbmZpZy5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL25hdi9uYXYtY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxVQUFVLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFDLFNBQVMsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUN4QztBQUVnQztBQURoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUgsTUFBTSxPQUFPLFlBQVk7QUFDekIsSUFNRSxZQUFZLFNBQW9CO0FBQUksUUFMcEMsa0JBQWEsR0FBRyxJQUFJLENBQUM7QUFDdkIsUUFBRSxnQkFBVyxHQUE4QixZQUFZLENBQUM7QUFDeEQsUUFBRSxVQUFLLEdBQXNCLFNBQVMsQ0FBQztBQUN2QyxRQUFFLGFBQVEsR0FBaUMsS0FBSyxDQUFDO0FBQ2pELFFBQ3NDLElBQUksQ0FBQyxTQUFTLEdBQUcsU0FBUyxDQUFDLFNBQVMsQ0FBQztBQUFDLElBQUEsQ0FBQztBQUM3RTtxSEFBQztBQUNELDBMQVRLO0FBQUM7RUFETCxVQUFVLFNBQUMsRUFBQyx2QkFFRyxZQVpSLFNBQVM7QUFBRztNQVVHLEVBQUUsTUFBTSxFQUFDOzs7bUVBVlY7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SW5qZWN0YWJsZX0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge05nYkNvbmZpZ30gZnJvbSAnLi4vbmdiLWNvbmZpZyc7XG5cbi8qKlxuICogQSBjb25maWd1cmF0aW9uIHNlcnZpY2UgZm9yIHRoZSBbYE5nYk5hdmBdKCMvY29tcG9uZW50cy9uYXYvYXBpI05nYk5hdikgY29tcG9uZW50LlxuICpcbiAqIFlvdSBjYW4gaW5qZWN0IHRoaXMgc2VydmljZSwgdHlwaWNhbGx5IGluIHlvdXIgcm9vdCBjb21wb25lbnQsIGFuZCBjdXN0b21pemUgdGhlIHZhbHVlcyBvZiBpdHMgcHJvcGVydGllcyBpblxuICogb3JkZXIgdG8gcHJvdmlkZSBkZWZhdWx0IHZhbHVlcyBmb3IgYWxsIHRoZSBuYXZzIHVzZWQgaW4gdGhlIGFwcGxpY2F0aW9uLlxuICpcbiAqIEBzaW5jZSA1LjIuMFxuICovXG5ASW5qZWN0YWJsZSh7cHJvdmlkZWRJbjogJ3Jvb3QnfSlcbmV4cG9ydCBjbGFzcyBOZ2JOYXZDb25maWcge1xuICBhbmltYXRpb246IGJvb2xlYW47XG4gIGRlc3Ryb3lPbkhpZGUgPSB0cnVlO1xuICBvcmllbnRhdGlvbjogJ2hvcml6b250YWwnIHwgJ3ZlcnRpY2FsJyA9ICdob3Jpem9udGFsJztcbiAgcm9sZXM6ICd0YWJsaXN0JyB8IGZhbHNlID0gJ3RhYmxpc3QnO1xuICBrZXlib2FyZDogYm9vbGVhbiB8ICdjaGFuZ2VXaXRoQXJyb3dzJyA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKG5nYkNvbmZpZzogTmdiQ29uZmlnKSB7IHRoaXMuYW5pbWF0aW9uID0gbmdiQ29uZmlnLmFuaW1hdGlvbjsgfVxufVxuIl19