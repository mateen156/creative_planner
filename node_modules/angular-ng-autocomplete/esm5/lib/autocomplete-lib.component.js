/**
 * @fileoverview added by tsickle
 * Generated from: lib/autocomplete-lib.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var AutocompleteLibComponent = /** @class */ (function () {
    function AutocompleteLibComponent() {
    }
    /**
     * @return {?}
     */
    AutocompleteLibComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /** @nocollapse */
    AutocompleteLibComponent.ctorParameters = function () { return []; };
AutocompleteLibComponent.ɵfac = function AutocompleteLibComponent_Factory(t) { return new (t || AutocompleteLibComponent)(); };
AutocompleteLibComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutocompleteLibComponent, selectors: [["ng-autocomplete-lib"]], decls: 2, vars: 0, template: function AutocompleteLibComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "p");
        ɵngcc0.ɵɵtext(1, " autocomplete-lib works! ");
        ɵngcc0.ɵɵelementEnd();
    } }, encapsulation: 2 });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AutocompleteLibComponent, [{
        type: Component,
        args: [{
                selector: 'ng-autocomplete-lib',
                template: "\n    <p>\n      autocomplete-lib works!\n    </p>\n  "
            }]
    }], function () { return []; }, null); })();
    return AutocompleteLibComponent;
}());
export { AutocompleteLibComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0b2NvbXBsZXRlLWxpYi5jb21wb25lbnQuanMiLCJzb3VyY2VzIjpbIm5nOi9hbmd1bGFyLW5nLWF1dG9jb21wbGV0ZS9saWIvYXV0b2NvbXBsZXRlLWxpYi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDOztBQUVsRDtBQUVZLElBU1Y7QUFJRixJQUprQixDQUFDO0FBQ25CO0FBQ087QUFJSDtBQUFRLElBSlYsMkNBQVE7QUFDUjtBQUdZO0FBQVEsSUFKcEI7QUFDRCxJQUFDLENBQUMsQ0FMSztBQUFDO3FDQVRSLFNBQVMsU0FBQyx2REFTcUI7R0FSOUIsUUFBUSxFQUFFLHFCQUFxQixzQkFDL0IsUUFBUSxFQUFFLHdEQUlUO1lBRUY7Ozs7Ozs7Ozs7O2dEQVNFO0FBQUMsSUFESiwrQkFBQztBQUNBLENBREEsQUFoQkQsSUFnQkM7QUFDRCxTQVJhLHdCQUF3QjtBQUFJIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmctYXV0b2NvbXBsZXRlLWxpYicsXG4gIHRlbXBsYXRlOiBgXG4gICAgPHA+XG4gICAgICBhdXRvY29tcGxldGUtbGliIHdvcmtzIVxuICAgIDwvcD5cbiAgYCxcbiAgc3R5bGVzOiBbXVxufSlcbmV4cG9ydCBjbGFzcyBBdXRvY29tcGxldGVMaWJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIGNvbnN0cnVjdG9yKCkgeyB9XG5cbiAgbmdPbkluaXQoKSB7XG4gIH1cblxufVxuIl19